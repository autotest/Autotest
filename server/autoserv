#!/usr/bin/python -u
#
# Copyright 2007 Google Inc. Released under the GPL v2

"""
Run an control file through the server side engine
"""

__author__ = """\
mbligh@google.com (Martin J. Bligh)
"""

import sys, os, re, server_job, hosts.site_host, utils

usage = """\
usage: autoserv
	[-m machine,[machine,...]] # list of machines to pass to control file
	[-M machines_file]         # list of machines (from a file)
	[-c]                       # control file is a client side control
	[-r resultsdir]            # specify results directory (default '.')
	[-i]                       # reinstall machines before running the job
	[-I]                       # reinstall machines after running the job
	[-b]                       # reboot all specified machines after the job
	[-l label]                 # label for the job (arbitrary string)
	[-u user]                  # username for the job (email address)
	<control file>             # name of the control file to run
	[args ...]                 # args to pass through to the control file
"""

args = sys.argv[1:]
parser = utils.AutoservOptionParser(args)

# Get a useful value for running 'USER'
realuser = os.environ.get('USER')
if not realuser:
	realuser = 'anonymous'

machines = parser.parse_opts_param('-m', None, split = ',')
machines_file = parser.parse_opts_param('-M', None)
results  = parser.parse_opts_param('-r', os.path.abspath('.'))
label    = parser.parse_opts_param('-l', '')
user     = parser.parse_opts_param('-u', realuser)
client   = parser.parse_opts('-c')
reboot   = parser.parse_opts('-b')
install_before = parser.parse_opts('-i')
install_after  = parser.parse_opts('-I')
results = os.path.abspath(results)

if getattr(hosts.site_host, 'site_parse_options', None):
	hosts.site_host.site_parse_options(parser)

if len(parser.args) < 1:
	print usage
	sys.exit(-1)

if machines_file:
	machines = []
	for m in open(machines_file, 'r').readlines():
		m = re.sub('#.*', '', m).strip()   # remove comments, spaces
		if m:
			machines.append(m)
	print "Read list of machines from file: %s" % machines_file
	print ','.join(machines)

job = server_job.server_job(parser.args[0], parser.args[1:], results, label,
								user, client)
job.stdout.tee_redirect(os.path.join(results, 'debug', 'autoserv.stdout'))
job.stderr.tee_redirect(os.path.join(results, 'debug', 'autoserv.stderr'))
job.run(machines, reboot, install_before, install_after)
