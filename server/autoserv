#!/usr/bin/python
#
# Copyright 2007 Google Inc. Released under the GPL v2

"""
Run an autoserv control file

TODO(poirier): add a singleton logger
TODO(poirier): maybe change the name "get_file" to "receive_file" ?
TODO(poirier): change get(), send_file(), get_file() to consistantly recognize
       paths that start with '~' as refering to the home directory
"""

__author__ = """
mbligh@google.com (Martin J. Bligh),
poirier@google.com (Benjamin Poirier),
stutsman@google.com (Ryan Stutsman)
"""

import sys
import optparse


def parse_args():
	usage = "usage: %prog <control file>"
	parser = optparse.OptionParser(usage)
	parser.add_option('-m', '--machines', dest='machines', type='string')
	(options, arg) = parser.parse_args()
	return (options, arg)


preamble = """\
import os, sys

import errors, hosts, autotest, kvm
import source_kernel, rpm_kernel, deb_kernel
from subcommand import *

from utils import run, get_tmp_dir
"""

def run(control_file, machines):
	namespace = dict({'machines': machines})
	
	exec(preamble, namespace, namespace)
	execfile(control_file, namespace, namespace)


if __name__ == "__main__":
	(options, args) = parse_args()
	if len(args) != 1:
		parser.error("program takes one argument")
		sys.exit(1)
	control_file = args[0]
	if options.machines:
		run(control_file, options.machines.split(','))
	else:
		run(control_file, None)
