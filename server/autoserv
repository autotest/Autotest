#!/usr/bin/python -u
#
# Copyright 2007 Google Inc. Released under the GPL v2

"""
Run an control file through the server side engine
"""

__author__ = """\
mbligh@google.com (Martin J. Bligh)
"""

import sys, os, re, server_job

usage = """\
usage: autoserv
	[-b]                       # reboot all specified machines after the job
	[-c]                       # control file is a client side control
	[-r resultsdir]            # specify results directory (default '.')
	[-l label]                 # label for the job (arbitrary string)
	[-u user]                  # username for the job (email address)
	[-m machine,[machine,...]] # list of machines to pass to control file
	<control file>             # name of the control file to run
	[args ...]                 # args to pass through to the control file
"""

args = sys.argv[1:]

# We can't use the general getopt methods here, as there will be unknown
# extra arguments that we pass down into the control file instead.
# Thus we process the arguments by hand, for which we are duly repentant.
# Making a single function here just makes it harder to read. Suck it up.
def parse_opts(flag):
	if args.count(flag):
		idx = args.index(flag)
		args[idx : idx+1] = []
		return True
	else:
		return False


def parse_opts_param(flag, default = None, split = False):
	if args.count(flag):
		idx = args.index(flag)
		ret = args[idx+1]
		args[idx : idx+2] = []
		if split:
			return ret.split(split)
		else:
			return ret
	else:
		return default


machines = parse_opts_param('-m', None, split = ',')
results  = parse_opts_param('-r', os.path.abspath('.'))
label    = parse_opts_param('-l', '')
user     = parse_opts_param('-u', 'anonymous')
client   = parse_opts('-c')
reboot   = parse_opts('-b')

if len(args) < 1:
	print usage
	sys.exit(-1)

job = server_job.server_job(args[0], args[1:], results, label, user, client)
job.run(machines, reboot)
